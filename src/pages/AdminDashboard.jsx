import { useEffect, useState } from "react";
import { getProfile, getRecipes, approveRecipe, banUser } from "../apiClient";
import { useNavigate } from "react-router-dom";


export default function AdminDashboard() {
  const [admin, setAdmin] = useState(null);
  const [recipes, setRecipes] = useState([]); // ‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÄ‡∏õ‡πá‡∏ô []
  const navigate = useNavigate();

  // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
  useEffect(() => {
    const checkAdmin = async () => {
      try {
        const res = await getProfile();
        if (res?.data?.role !== "admin") {
          navigate("/dashboard"); // ‚ùå ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô ‡∏™‡πà‡∏á‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ dashboard
        } else {
          setAdmin(res.data);
        }
      } catch (error) {
        localStorage.removeItem("token");
        navigate("/login"); // ‚ùå ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô ‡∏™‡πà‡∏á‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ login
      }
    };
    
    checkAdmin();
  }, [navigate]);

  // ‚úÖ ‡∏î‡∏∂‡∏á‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥
  useEffect(() => {
    getRecipes()
      .then((data) => setRecipes(data || [])) // ‚úÖ ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô recipes ‡πÄ‡∏õ‡πá‡∏ô undefined
      .catch((err) => console.error("Error fetching recipes:", err));
  }, []);
  

  // ‚úÖ ‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÇ‡∏û‡∏™‡∏ï‡πå
  const handleApprove = async (id) => {
    try {
      await approveRecipe(id);
      setRecipes((prevRecipes) =>
        prevRecipes.map((r) => (r.id === id ? { ...r, isApproved: true } : r))
      );
    } catch (error) {
      console.error("Error approving recipe:", error);
    }
  };

  // ‚úÖ ‡πÅ‡∏ö‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
  const handleBan = async (userId) => {
    try {
      await banUser(userId);
      alert("‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ñ‡∏π‡∏Å‡πÅ‡∏ö‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢");
    } catch (error) {
      console.error("Error banning user:", error);
    }
  };

  // ‚úÖ Logout
  const handleLogout = () => {
    localStorage.removeItem("token");
    navigate("/login");
  };

  const handleGoToDashboard = () => {
    navigate("/dashboard");
  };

  if (!admin) return <p className="text-center mt-10">Loading...</p>;

  return (
    <div className="min-h-screen bg-gray-100 p-6">
      <div className="max-w-4xl mx-auto bg-white p-6 rounded-lg shadow-md">
        <h1 className="text-3xl font-bold text-gray-800 mb-4">üëë Admin Dashboard</h1>
        <p className="text-gray-600 mb-6">‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö, {admin.name}</p>

        <button onClick={handleLogout} className="mt-4 bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600">
          ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö
        </button>
        <div className="flex space-x-4 mt-4">
          <button 
            onClick={handleGoToDashboard} 
            className="bg-gray-300 text-white px-4 py-2 rounded hover:bg-gray-600">üîô ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ Dashboard
          </button>
        </div>

        <div className="mt-6">
          <h2 className="text-2xl font-semibold mb-4">üìä ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥</h2>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div className="p-4 bg-blue-100 rounded-lg shadow-md">
              <h3 className="text-xl font-bold text-blue-800">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</h3>
              <p className="text-2xl text-blue-600">{recipes?.length || 0}</p> {/* ‚úÖ ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô undefined */}
            </div>
            <div className="p-4 bg-red-100 rounded-lg shadow-md">
              <h3 className="text-xl font-bold text-red-800">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡πÅ‡∏ö‡∏ô</h3>
              <p className="text-2xl text-red-600">{/* ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡πÅ‡∏ö‡∏ô */}</p>
            </div>
          </div>
        </div>

        <h2 className="text-2xl font-semibold mt-6 mb-4">üìå ‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥</h2>
        {recipes?.filter((r) => !r.isApproved)?.length === 0 ? (
          <p className="text-gray-500 mt-2">‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥</p>
        ) : (
          <ul className="mt-4 space-y-3">
            {recipes
              .filter((r) => !r.isApproved)
              .map((recipe) => (
                <li key={recipe.id} className="p-4 border rounded shadow-sm bg-gray-50">
                  <h3 className="text-xl font-bold mb-2">{recipe.title}</h3>
                  <p className="text-gray-600 mb-2">{recipe.content}</p>
                  <p className="text-sm text-gray-500 mb-4">‡πÇ‡∏û‡∏™‡∏ï‡πå‡πÇ‡∏î‡∏¢: {recipe.author?.name}</p>

                  <div className="flex space-x-2">
                    <button
                      onClick={() => handleApprove(recipe.id)}
                      className="bg-blue-500 text-white px-3 py-1 rounded hover:bg-blue-600"
                    >
                      ‚úÖ ‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥
                    </button>

                    <button
                      onClick={() => handleBan(recipe.authorId)}
                      className="bg-red-500 text-white px-3 py-1 rounded hover:bg-red-600"
                    >
                      üö´ ‡πÅ‡∏ö‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
                    </button>
                  </div>
                </li>
              ))}
          </ul>
        )}
      </div>
    </div>
  );
}
